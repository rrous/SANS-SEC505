# Static IP file:
sudo gedit /etc/network/interfaces

    auto eth0
    iface eth0 inet static
    address 192.168.50.2
    netmask 255.255.255.0
    gateway 192.168.50.1

systemctl restart networking.service




#Show information for all addresses
ip addr

#Display information only for device em1
ip addr show dev em1     

#Show information for all interfaces
ip link

#Display information only for device em1
ip link show dev em1

#Display interface statistics
ip -s link





#List all of the route entries in the kernel
ip route

#Display multicast information for all devices
ip maddr

#Display multicast information for device em1
ip maddr show dev em1




#Display neighbour objects
ip neigh

#Show the ARP cache for device em1
ip neigh show dev em1





#Display ip commands and arguments
ip help

#Display address commands and arguments
ip addr help

#Display link commands and arguments
ip link help


#Display neighbor commands and arguments
ip neigh help




#Add mutlicast address 33:33:00:00:00:01 to em1
ip maddr add 33:33:00:00:00:01 dev em1


#Delete address 33:33:00:00:00:01 from em1
ip maddr del 33:33:00:00:00:01 dev em1




#Add address 192.168.1.1 with netmask 24 to device em1
ip addr add 192.168.1.1/24 dev em1

#Remove address 192.168.1.1/24 from device em1
ip addr del 192.168.1.1/24 dev em1



#Bring em1 online
ip link set em1 up


#Bring em1 offline
ip link set em1 down



#Set the MTU on em1 to 9000
ip link set em1 mtu 9000

#Enable promiscuous mode for em1
ip link set em1 promisc on






#Add a default route (for all addresses) via the local gateway 192.168.1.1 
#that can be reached on device em1
ip route add default via 192.168.1.1 dev em1


#Add a route to 192.168.1.0/24 via the gateway at 192.168.1.1
ip route add 192.168.1.0/24 via 192.168.1.1


#Add a route to 192.168.1.0/24 that can be reached on device em1
ip route add 192.168.1.0/24 dev em1


#Delete the route for 192.168.1.0/24 via the gateway at 192.168.1.1
ip route delete 192.168.1.0/24 via 192.168.1.1




#Replace the defined route for 192.168.1.0/24 to use device em1
ip route replace 192.168.1.0/24 dev em1

#Display the route taken for IP 192.168.1.5
ip route get 192.168.1.5

#Add address 192.168.1.1 with MAC 1:2:3:4:5:6 to em1 neigh
ip neigh add 192.168.1.1 lladdr 1:2:3:4:5:6 dev em1





#Invalidate the entry for 192.168.1.1 on em1
ip neigh del 192.168.1.1 dev em1


#Replace the entry for address 192.168.1.1 to use MAC 1:2:3:4:5:6 on em1
ip neigh replace 192.168.1.1 lladdr 1:2:3:4:5:6 dev em1





#Send ARP request to 192.168.1.1 via interface eth0
arping -I eth0 192.168.1.1


#Check for duplicate MAC addresses at 192.168.1.1 on eth0
arping -D -I eth0 192.168.1.1



#Display ring buffer for eth0
ethtool -g eth0


#Display driver information for eth0
ethtool -i eth0


#Identify eth0 by sight, typically by causing LEDs to blink on the network port
ethtool -p eth0


#Display network and driver statistics for eth0
ethtool -S eth0







#Show all sockets (listening and non-listening)
ss -a

#Show detailed socket information
ss -e

#Show timer information
ss -o


#Do not resolve addresses
ss -n


#Show process using the socket
ss -p


